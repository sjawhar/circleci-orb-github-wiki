version: 2.1
description: Automatically build and push to your GitHub repo's Wiki

executors:
  default:
    description: Single Docker container with bash
    docker:
      - image: circleci/node

commands:
  populate-sidebars:
    description: Populate sidebar files with page header links
    parameters:
      sidebar-placeholder:
        type: string
        description: String in sidebar files to replace with page header links
        default: '{{SIDEBAR_POPULATE}}'
    steps:
      - run:
          name: Populate sidebars
          command: |
            #!/bin/bash
            set -euf -o pipefail

            SIDEBAR_FILE="__Sidebar.md"
            GENERATE_MATCH="<< parameters.sidebar-placeholder >>"

            for SIDEBAR_PATH in $(find . \
              -type f -name "${SIDEBAR_FILE}" \
              -exec grep -l "${GENERATE_MATCH}" {} \;
            )
            do
              SIDEBAR_DIR="$(dirname ${SIDEBAR_PATH})"
              pushd "${SIDEBAR_DIR}"

              if [ "${SIDEBAR_DIR}" == "." ]
              then
                MARKDOWN_FILE=Home.md
              else
                MARKDOWN_FILE="`basename ${SIDEBAR_DIR}`.md"
              fi

              grep -oP '(?<=^#)#+ .*$' "${MARKDOWN_FILE}" | awk '{
                original_len = length($0)
                sub(/^#+ /,"")
                indent = sprintf("%"(original_len - length($0) - 1)"s","")
                gsub(" ", "\\&nbsp;\\&nbsp;", indent)
                gsub(" ", "", indent)
                link = tolower($0)
                gsub(/[^a-zA-Z0-9 _-]/, "", link)
                gsub(" ", "-", link)
                entry = indent "["$0"](#"link")  "
                print entry
              }' > replace.txt

              sed -i 's/'"${GENERATE_MATCH}"'/cat replace.txt/e' "${SIDEBAR_FILE}"
              rm replace.txt

              popd
            done

  push-to-wiki-repo:
    description: Copy files to wiki repo and push
    parameters:
      commit-user-name:
        type: string
        description: User name with which wiki changes should be commited
        default: CircleCI
      commit-user-email:
        type: string
        description: User email with which wiki changes should be commited
      dry-run:
        type: boolean
        description: Commit changes to wiki repo, but don't push
        default: false
      ssh-key-env-var-name:
        type: env_var_name
        description: Name of the environment variable containing the fingerprint of the SSH key with push access to your repo
        default: GITHUB_WIKI_SSH
    steps:
      - run:
          name: Clone wiki
          command: git clone ${CIRCLE_REPOSITORY_URL/\.git/.wiki.git} /tmp/wiki
      - run:
          name: Commit changes
          command: |
            export COMMIT_MESSAGE="$(git log --format=%B -n 1 ${CIRCLE_SHA1})"
            cp -r /tmp/wiki/.git ./
            git config user.email "<< parameters.commit-user-email >>"
            git config user.name "<< parameters.commit-user-name >>"
            git add .
            git commit -m "${COMMIT_MESSAGE}" || changes=none
      - add_ssh_keys:
          fingerprints:
            - $<< parameters.ssh-key-env-var-name >>
      - unless:
          condition: << parameters.dry-run >>
          steps:
            - run:
                name: Push to wiki repo
                command: git push

jobs:
  build-and-push:
    description: Populate sidebar files with page header links and push to wiki repo
    executor: default
    parameters:
      commit-user-name:
        type: string
        description: User name with which wiki changes should be commited
        default: CircleCI
      commit-user-email:
        type: string
        description: User email with which wiki changes should be commited
      dry-run:
        type: boolean
        description: Populate sidebars and commit, but don't push
        default: false
      sidebar-placeholder:
        type: string
        description: String in sidebar files to replace with page header links
        default: '{{SIDEBAR_POPULATE}}'
      ssh-key-env-var-name:
        type: env_var_name
        description: Name of the environment variable containing the fingerprint of the SSH key with push access to your repo
        default: GITHUB_WIKI_SSH
      wiki-folder-path:
        type: string
        description: Path to directory containing wiki files
        default: docs
    working_directory: << parameters.wiki-folder-path >>
    steps:
      - checkout
      - populate-sidebars:
          sidebar-placeholder: << parameters.sidebar-placeholder >>
      - push-to-wiki-repo:
          commit-user-name: << parameters.commit-user-name >>
          commit-user-email: << parameters.commit-user-email >>
          dry-run: << parameters.dry-run >>
          ssh-key-env-var-name: << parameters.ssh-key-env-var-name >>
